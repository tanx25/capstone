# -*- coding: utf-8 -*-
"""capstone.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TBi7M6kqfgZ7gysAcWFta9sMa4rh5LCD
"""

import re
import spacy

# Load clinical note
clinical_note = """ONCOLOGIA CLINICA
.
       , 19 años.
.
Diagnostico oncologico:
- Carcinoma nasofaringeo con extension intracraneal cT4N2M0 Estadio IVa. Dx Nov/2022
- Compromiso ganglionar cervical bilateral
- Compromiso pulmonar en estudio --> Bx pulmonar negativa para malignidad.
* Multiples areas de vidrio esmerilado subpleurales , algunas especialmente en LSD tendiente a ser nodulares
** Bx percutanea negativa para malignidad, no admite Bx por VATS.
- Sx febril en estudio.
**Proceso inflamatorio sinusal.
**Meronemem nuevamente desde 09/01/2023
.
Diagnostico de actual hospitalizacion:
1. Deterioro neurologico resuelto
* Etiologia multifactorial: Progresion de patologia? vs sindrome opioide vs hiponatremia
* TAC de craneo simple con cambios por edema cerebral
2. Falla ventilatoria hipercapnica con acidemia respiratoria resuelta
3. Bacteriemia asociada a cateter PICC?, resuelta.
* E. coli BLEE + K. pneumoniae BLEE + K. oxytoca --> Recibio Meropenem hasta 06/01/2023.
4. Carcinoma NUT nasofaringeo con extension intracraneal en estadificacion
* POP biopsia 21/11/22
* Erosion del apex petroso y seno esfenoidal que se extiende a nivel intracraneal ocupando la mayor parte de la region selar,
desplazando tejido glandular hipofisiario dorsalmente.
* Compromiso de via aerea, senos paranasales y mastoides.
* Multiples areas de vidrio esmerilado subpleural, tendiente a la nodularidad LSD.
* Engrosamiento nodular pleural con nodulos adyacentes en la pared anterior de ambos hemitorax.
* Compromiso vascular carotideo izquierdo.
* Conglomerados ganglionares en los niveles II-III-IV yugular bilateral
* Infiltracion de quiasma optico
Infiltracion de quiasma optico.
5. Paralisis VI par izquierdo
* Invasion tumoral?
6. Hiponatremia grave resuelta
* Sospecha de SIADH vs cerebro perdedor de sal.
7. Compromiso de via aerea
-Traqueostomia quirurgica el 04/12/2022
8. Disfagia con compromiso nutricional
-Gastrostomia percutanea el 07/12/2022.
.
Tratamiento oncologico:
POP De traqueostomia 04/12/2022
06/12/2022 Bx de nodulo pulmonar.
POP De gastrostomia 07/12/2022
QT de induccion: Gemcitabina + Cisplatino:
Ciclo No. 1 07/01/2023 - 14/01/2023
.
Antecedentes
- Patologicos: niega
- Quirurgicos: toma de biopsia de masa naso y orofaringea 01/11/2022
- Alergicos: niega
- Toxicologicos: niega
- Farmacologicos: niega
- Hospitalarios: 31/10/2022 -14/11/2022 por carcinoma nasofaringeo en estudio.
.
S: Asintomatico, sin nuevos episodios febriles, tolerta QT y nutricion enteral, se encuentra en plan de rehabilitacion.
."""  # Spanish clinical note

# Text cleaning and tokenization
def preprocess_text(text):
    text = text.lower()
    text = re.sub(r'\s+', ' ', text)
    return text

cleaned_note = preprocess_text(clinical_note)

! pip install spacy~=3.1
! python -m spacy download es_core_news_sm

nlp = spacy.load("es_core_news_sm")  # Spanish NLP model

# Apply NLP model to the text
doc = nlp(cleaned_note)

# Extract entities
entities = [(ent.text, ent.label_) for ent in doc.ents]

pip install googletrans==4.0.0-rc1

from googletrans import Translator

translator = Translator()

def translate_entities(entities):
    translated_entities = []
    for entity, label in entities:
        translated_entity = translator.translate(entity, src='es', dest='en').text
        translated_entities.append((translated_entity, label))
    return translated_entities

translated_entities = translate_entities(entities)

# Example mapping dictionary for illustrative purposes
regimen_mapping = {
    "nasopharyngeal carcinoma": "Carcinoma nasofaríngeo",
    "Gemcitabine": "Gemcitabina",
    "Cisplatin": "Cisplatino"
}

# Map entities
mapped_entities = [(entity, regimen_mapping.get(entity, "Unknown")) for entity, label in translated_entities]

translated_entities

# Load standard regimens
import pandas as pd

standard_regimens = pd.read_excel("QT_regimenes.xlsx")

# Example comparison function
def compare_regimen(extracted_regimen, standard_regimens):
    for _, row in standard_regimens.iterrows():
        # Check if row['Regimen Details'] is a string; if not, skip the comparison
        if isinstance(row['Regimen Details'], str):
            if extracted_regimen.lower() in row['Regimen Details'].lower():
                return True
        # Optionally handle cases where row['Regimen Details'] might be a float or other non-string type
        # You can add further checks or conversions here if needed
    return False

extracted_regimen = "Gemcitabine + Cisplatin"
is_standard = compare_regimen(extracted_regimen, standard_regimens)
print(f"Is the regimen standard? {is_standard}")